package fproject.app.fproject.vo;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 참여인원정보 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class AttendinfoVo implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 채팅리스트. */
	private ChatlistVo chatlist;

	/** 계정. */
	private AccountVo account;

	/** 회원상태. */
	private Integer state;

	/** 채팅 목록. */
	private Set<ChatVo> chatSet;

	/** 공지 목록. */
	private Set<ChatnoticeVo> chatnoticeSet;

	/** 채팅방상태 목록. */
	private Set<ChatstateVo> chatstateSet;

	/** 읽은사람정보 목록. */
	private Set<ReadinfoVo> readinfoSet;

	/**
	 * 생성자.
	 */
	public AttendinfoVo() {
		this.chatSet = new HashSet<ChatVo>();
		this.chatnoticeSet = new HashSet<ChatnoticeVo>();
		this.chatstateSet = new HashSet<ChatstateVo>();
		this.readinfoSet = new HashSet<ReadinfoVo>();
	}

	/**
	 * 채팅리스트을 설정합니다..
	 * 
	 * @param chatlist
	 *            채팅리스트
	 */
	public void setChatlist(ChatlistVo chatlist) {
		this.chatlist = chatlist;
	}

	/**
	 * 채팅리스트을 가져옵니다..
	 * 
	 * @return 채팅리스트
	 */
	public ChatlistVo getChatlist() {
		return this.chatlist;
	}

	/**
	 * 계정을 설정합니다..
	 * 
	 * @param account
	 *            계정
	 */
	public void setAccount(AccountVo account) {
		this.account = account;
	}

	/**
	 * 계정을 가져옵니다..
	 * 
	 * @return 계정
	 */
	public AccountVo getAccount() {
		return this.account;
	}

	/**
	 * 회원상태을 설정합니다..
	 * 
	 * @param state
	 *            회원상태
	 */
	public void setState(Integer state) {
		this.state = state;
	}

	/**
	 * 회원상태을 가져옵니다..
	 * 
	 * @return 회원상태
	 */
	public Integer getState() {
		return this.state;
	}

	/**
	 * 채팅 목록을 설정합니다..
	 * 
	 * @param chatSet
	 *            채팅 목록
	 */
	public void setChatSet(Set<ChatVo> chatSet) {
		this.chatSet = chatSet;
	}

	/**
	 * 채팅를 추가합니다..
	 * 
	 * @param chat
	 *            채팅
	 */
	public void addChat(ChatVo chat) {
		this.chatSet.add(chat);
	}

	/**
	 * 채팅 목록을 가져옵니다..
	 * 
	 * @return 채팅 목록
	 */
	public Set<ChatVo> getChatSet() {
		return this.chatSet;
	}

	/**
	 * 공지 목록을 설정합니다..
	 * 
	 * @param chatnoticeSet
	 *            공지 목록
	 */
	public void setChatnoticeSet(Set<ChatnoticeVo> chatnoticeSet) {
		this.chatnoticeSet = chatnoticeSet;
	}

	/**
	 * 공지를 추가합니다..
	 * 
	 * @param chatnotice
	 *            공지
	 */
	public void addChatnotice(ChatnoticeVo chatnotice) {
		this.chatnoticeSet.add(chatnotice);
	}

	/**
	 * 공지 목록을 가져옵니다..
	 * 
	 * @return 공지 목록
	 */
	public Set<ChatnoticeVo> getChatnoticeSet() {
		return this.chatnoticeSet;
	}

	/**
	 * 채팅방상태 목록을 설정합니다..
	 * 
	 * @param chatstateSet
	 *            채팅방상태 목록
	 */
	public void setChatstateSet(Set<ChatstateVo> chatstateSet) {
		this.chatstateSet = chatstateSet;
	}

	/**
	 * 채팅방상태를 추가합니다..
	 * 
	 * @param chatstate
	 *            채팅방상태
	 */
	public void addChatstate(ChatstateVo chatstate) {
		this.chatstateSet.add(chatstate);
	}

	/**
	 * 채팅방상태 목록을 가져옵니다..
	 * 
	 * @return 채팅방상태 목록
	 */
	public Set<ChatstateVo> getChatstateSet() {
		return this.chatstateSet;
	}

	/**
	 * 읽은사람정보 목록을 설정합니다..
	 * 
	 * @param readinfoSet
	 *            읽은사람정보 목록
	 */
	public void setReadinfoSet(Set<ReadinfoVo> readinfoSet) {
		this.readinfoSet = readinfoSet;
	}

	/**
	 * 읽은사람정보를 추가합니다..
	 * 
	 * @param readinfo
	 *            읽은사람정보
	 */
	public void addReadinfo(ReadinfoVo readinfo) {
		this.readinfoSet.add(readinfo);
	}

	/**
	 * 읽은사람정보 목록을 가져옵니다..
	 * 
	 * @return 읽은사람정보 목록
	 */
	public Set<ReadinfoVo> getReadinfoSet() {
		return this.readinfoSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((chatlist == null) ? 0 : chatlist.hashCode());
		result = prime * result + ((account == null) ? 0 : account.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AttendinfoVo other = (AttendinfoVo) obj;
		if (chatlist == null) {
			if (other.chatlist != null) {
				return false;
			}
		} else if (!chatlist.equals(other.chatlist)) {
			return false;
		}
		if (account == null) {
			if (other.account != null) {
				return false;
			}
		} else if (!account.equals(other.account)) {
			return false;
		}
		return true;
	}

}
