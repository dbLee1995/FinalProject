package fproject.app.fproject.vo;

import java.io.Serializable;
import java.sql.Blob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * 스토리 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class StoryVo implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 스토리번호. */
	private Integer storynum;

	/** 계정. */
	private AccountVo account;

	/** 스토리제목. */
	private String stitle;

	/** 스토리내용. */
	private String scontent;

	/** 작성일자. */
	private Date sregdate;

	/** 원본이미지이름. */
	private String orgimg;

	/** 저장이미지이름. */
	private String saveimg;

	/** 파일크기. */
	private Blob imgsize;

	/** 코멘트 목록. */
	private Set<CommentsVo> commentsSet;

	/**
	 * 생성자.
	 */
	public StoryVo() {
		this.commentsSet = new HashSet<CommentsVo>();
	}

	/**
	 * 스토리번호을 설정합니다..
	 * 
	 * @param storynum
	 *            스토리번호
	 */
	public void setStorynum(Integer storynum) {
		this.storynum = storynum;
	}

	/**
	 * 스토리번호을 가져옵니다..
	 * 
	 * @return 스토리번호
	 */
	public Integer getStorynum() {
		return this.storynum;
	}

	/**
	 * 계정을 설정합니다..
	 * 
	 * @param account
	 *            계정
	 */
	public void setAccount(AccountVo account) {
		this.account = account;
	}

	/**
	 * 계정을 가져옵니다..
	 * 
	 * @return 계정
	 */
	public AccountVo getAccount() {
		return this.account;
	}

	/**
	 * 스토리제목을 설정합니다..
	 * 
	 * @param stitle
	 *            스토리제목
	 */
	public void setStitle(String stitle) {
		this.stitle = stitle;
	}

	/**
	 * 스토리제목을 가져옵니다..
	 * 
	 * @return 스토리제목
	 */
	public String getStitle() {
		return this.stitle;
	}

	/**
	 * 스토리내용을 설정합니다..
	 * 
	 * @param scontent
	 *            스토리내용
	 */
	public void setScontent(String scontent) {
		this.scontent = scontent;
	}

	/**
	 * 스토리내용을 가져옵니다..
	 * 
	 * @return 스토리내용
	 */
	public String getScontent() {
		return this.scontent;
	}

	/**
	 * 작성일자을 설정합니다..
	 * 
	 * @param sregdate
	 *            작성일자
	 */
	public void setSregdate(Date sregdate) {
		this.sregdate = sregdate;
	}

	/**
	 * 작성일자을 가져옵니다..
	 * 
	 * @return 작성일자
	 */
	public Date getSregdate() {
		return this.sregdate;
	}

	/**
	 * 원본이미지이름을 설정합니다..
	 * 
	 * @param orgimg
	 *            원본이미지이름
	 */
	public void setOrgimg(String orgimg) {
		this.orgimg = orgimg;
	}

	/**
	 * 원본이미지이름을 가져옵니다..
	 * 
	 * @return 원본이미지이름
	 */
	public String getOrgimg() {
		return this.orgimg;
	}

	/**
	 * 저장이미지이름을 설정합니다..
	 * 
	 * @param saveimg
	 *            저장이미지이름
	 */
	public void setSaveimg(String saveimg) {
		this.saveimg = saveimg;
	}

	/**
	 * 저장이미지이름을 가져옵니다..
	 * 
	 * @return 저장이미지이름
	 */
	public String getSaveimg() {
		return this.saveimg;
	}

	/**
	 * 파일크기을 설정합니다..
	 * 
	 * @param imgsize
	 *            파일크기
	 */
	public void setImgsize(Blob imgsize) {
		this.imgsize = imgsize;
	}

	/**
	 * 파일크기을 가져옵니다..
	 * 
	 * @return 파일크기
	 */
	public Blob getImgsize() {
		return this.imgsize;
	}

	/**
	 * 코멘트 목록을 설정합니다..
	 * 
	 * @param commentsSet
	 *            코멘트 목록
	 */
	public void setCommentsSet(Set<CommentsVo> commentsSet) {
		this.commentsSet = commentsSet;
	}

	/**
	 * 코멘트를 추가합니다..
	 * 
	 * @param comments
	 *            코멘트
	 */
	public void addComments(CommentsVo comments) {
		this.commentsSet.add(comments);
	}

	/**
	 * 코멘트 목록을 가져옵니다..
	 * 
	 * @return 코멘트 목록
	 */
	public Set<CommentsVo> getCommentsSet() {
		return this.commentsSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((storynum == null) ? 0 : storynum.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		StoryVo other = (StoryVo) obj;
		if (storynum == null) {
			if (other.storynum != null) {
				return false;
			}
		} else if (!storynum.equals(other.storynum)) {
			return false;
		}
		return true;
	}

}
