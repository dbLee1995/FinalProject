package fproject.app.fproject.vo;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 이모티콘샵 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class EmoshopVo implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 이모티콘그룹번호. */
	private Integer emognum;

	/** 가격. */
	private Integer price;

	/** 이모티콘그룹이름. */
	private String name;

	/** 카테고리. */
	private String category;

	/** 이모티콘 목록. */
	private Set<EmoticonVo> emoticonSet;

	/** 이모티콘그룹 목록. */
	private Set<EmoticongroupVo> emoticongroupSet;

	/** 찜목록 목록. */
	private Set<FavorlistVo> favorlistSet;

	/** 선물 목록. */
	private Set<PresentVo> presentSet;

	/**
	 * 생성자.
	 */
	public EmoshopVo() {
		this.emoticonSet = new HashSet<EmoticonVo>();
		this.emoticongroupSet = new HashSet<EmoticongroupVo>();
		this.favorlistSet = new HashSet<FavorlistVo>();
		this.presentSet = new HashSet<PresentVo>();
	}

	/**
	 * 이모티콘그룹번호을 설정합니다..
	 * 
	 * @param emognum
	 *            이모티콘그룹번호
	 */
	public void setEmognum(Integer emognum) {
		this.emognum = emognum;
	}

	/**
	 * 이모티콘그룹번호을 가져옵니다..
	 * 
	 * @return 이모티콘그룹번호
	 */
	public Integer getEmognum() {
		return this.emognum;
	}

	/**
	 * 가격을 설정합니다..
	 * 
	 * @param price
	 *            가격
	 */
	public void setPrice(Integer price) {
		this.price = price;
	}

	/**
	 * 가격을 가져옵니다..
	 * 
	 * @return 가격
	 */
	public Integer getPrice() {
		return this.price;
	}

	/**
	 * 이모티콘그룹이름을 설정합니다..
	 * 
	 * @param name
	 *            이모티콘그룹이름
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * 이모티콘그룹이름을 가져옵니다..
	 * 
	 * @return 이모티콘그룹이름
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * 카테고리을 설정합니다..
	 * 
	 * @param category
	 *            카테고리
	 */
	public void setCategory(String category) {
		this.category = category;
	}

	/**
	 * 카테고리을 가져옵니다..
	 * 
	 * @return 카테고리
	 */
	public String getCategory() {
		return this.category;
	}

	/**
	 * 이모티콘 목록을 설정합니다..
	 * 
	 * @param emoticonSet
	 *            이모티콘 목록
	 */
	public void setEmoticonSet(Set<EmoticonVo> emoticonSet) {
		this.emoticonSet = emoticonSet;
	}

	/**
	 * 이모티콘를 추가합니다..
	 * 
	 * @param emoticon
	 *            이모티콘
	 */
	public void addEmoticon(EmoticonVo emoticon) {
		this.emoticonSet.add(emoticon);
	}

	/**
	 * 이모티콘 목록을 가져옵니다..
	 * 
	 * @return 이모티콘 목록
	 */
	public Set<EmoticonVo> getEmoticonSet() {
		return this.emoticonSet;
	}

	/**
	 * 이모티콘그룹 목록을 설정합니다..
	 * 
	 * @param emoticongroupSet
	 *            이모티콘그룹 목록
	 */
	public void setEmoticongroupSet(Set<EmoticongroupVo> emoticongroupSet) {
		this.emoticongroupSet = emoticongroupSet;
	}

	/**
	 * 이모티콘그룹를 추가합니다..
	 * 
	 * @param emoticongroup
	 *            이모티콘그룹
	 */
	public void addEmoticongroup(EmoticongroupVo emoticongroup) {
		this.emoticongroupSet.add(emoticongroup);
	}

	/**
	 * 이모티콘그룹 목록을 가져옵니다..
	 * 
	 * @return 이모티콘그룹 목록
	 */
	public Set<EmoticongroupVo> getEmoticongroupSet() {
		return this.emoticongroupSet;
	}

	/**
	 * 찜목록 목록을 설정합니다..
	 * 
	 * @param favorlistSet
	 *            찜목록 목록
	 */
	public void setFavorlistSet(Set<FavorlistVo> favorlistSet) {
		this.favorlistSet = favorlistSet;
	}

	/**
	 * 찜목록를 추가합니다..
	 * 
	 * @param favorlist
	 *            찜목록
	 */
	public void addFavorlist(FavorlistVo favorlist) {
		this.favorlistSet.add(favorlist);
	}

	/**
	 * 찜목록 목록을 가져옵니다..
	 * 
	 * @return 찜목록 목록
	 */
	public Set<FavorlistVo> getFavorlistSet() {
		return this.favorlistSet;
	}

	/**
	 * 선물 목록을 설정합니다..
	 * 
	 * @param presentSet
	 *            선물 목록
	 */
	public void setPresentSet(Set<PresentVo> presentSet) {
		this.presentSet = presentSet;
	}

	/**
	 * 선물를 추가합니다..
	 * 
	 * @param present
	 *            선물
	 */
	public void addPresent(PresentVo present) {
		this.presentSet.add(present);
	}

	/**
	 * 선물 목록을 가져옵니다..
	 * 
	 * @return 선물 목록
	 */
	public Set<PresentVo> getPresentSet() {
		return this.presentSet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((emognum == null) ? 0 : emognum.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		EmoshopVo other = (EmoshopVo) obj;
		if (emognum == null) {
			if (other.emognum != null) {
				return false;
			}
		} else if (!emognum.equals(other.emognum)) {
			return false;
		}
		return true;
	}

}
