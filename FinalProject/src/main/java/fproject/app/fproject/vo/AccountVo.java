package fproject.app.fproject.vo;

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * 계정 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class AccountVo implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 회원번호. */
	private Integer num;

	/** 아이디. */
	private String id;

	/** 비밀번호. */
	private String pwd;

	/** 참여인원정보 목록. */
	private Set<AttendinfoVo> attendinfoSet;

	/** 달력 목록. */
	private Set<CalenderVo> calenderSet;

	/** 코멘트 목록. */
	private Set<CommentsVo> commentsSet;

	/** 이모티콘그룹 목록. */
	private Set<EmoticongroupVo> emoticongroupSet;

	/** 찜목록 목록. */
	private Set<FavorlistVo> favorlistSet;

	/** 친구목록 목록. */
	private Set<FriendlistVo> friendlistSet;

	/** 옵션 목록. */
	private Set<OptionsVo> optionsSet;

	/** 선물 목록. */
	private Set<PresentVo> presentSet;

	/** 프로필 목록. */
	private Set<ProfilesVo> profilesSet;

	/** 문의 목록. */
	private Set<QnaVo> qnaSet;

	/** 스토리 목록. */
	private Set<StoryVo> storySet;

	/**
	 * 생성자.
	 */
	public AccountVo() {
		this.attendinfoSet = new HashSet<AttendinfoVo>();
		this.calenderSet = new HashSet<CalenderVo>();
		this.commentsSet = new HashSet<CommentsVo>();
		this.emoticongroupSet = new HashSet<EmoticongroupVo>();
		this.favorlistSet = new HashSet<FavorlistVo>();
		this.friendlistSet = new HashSet<FriendlistVo>();
		this.optionsSet = new HashSet<OptionsVo>();
		this.presentSet = new HashSet<PresentVo>();
		this.profilesSet = new HashSet<ProfilesVo>();
		this.qnaSet = new HashSet<QnaVo>();
		this.storySet = new HashSet<StoryVo>();
	}

	/**
	 * 회원번호을 설정합니다..
	 * 
	 * @param num
	 *            회원번호
	 */
	public void setNum(Integer num) {
		this.num = num;
	}

	/**
	 * 회원번호을 가져옵니다..
	 * 
	 * @return 회원번호
	 */
	public Integer getNum() {
		return this.num;
	}

	/**
	 * 아이디을 설정합니다..
	 * 
	 * @param id
	 *            아이디
	 */
	public void setId(String id) {
		this.id = id;
	}

	/**
	 * 아이디을 가져옵니다..
	 * 
	 * @return 아이디
	 */
	public String getId() {
		return this.id;
	}

	/**
	 * 비밀번호을 설정합니다..
	 * 
	 * @param pwd
	 *            비밀번호
	 */
	public void setPwd(String pwd) {
		this.pwd = pwd;
	}

	/**
	 * 비밀번호을 가져옵니다..
	 * 
	 * @return 비밀번호
	 */
	public String getPwd() {
		return this.pwd;
	}

	/**
	 * 참여인원정보 목록을 설정합니다..
	 * 
	 * @param attendinfoSet
	 *            참여인원정보 목록
	 */
	public void setAttendinfoSet(Set<AttendinfoVo> attendinfoSet) {
		this.attendinfoSet = attendinfoSet;
	}

	/**
	 * 참여인원정보를 추가합니다..
	 * 
	 * @param attendinfo
	 *            참여인원정보
	 */
	public void addAttendinfo(AttendinfoVo attendinfo) {
		this.attendinfoSet.add(attendinfo);
	}

	/**
	 * 참여인원정보 목록을 가져옵니다..
	 * 
	 * @return 참여인원정보 목록
	 */
	public Set<AttendinfoVo> getAttendinfoSet() {
		return this.attendinfoSet;
	}

	/**
	 * 달력 목록을 설정합니다..
	 * 
	 * @param calenderSet
	 *            달력 목록
	 */
	public void setCalenderSet(Set<CalenderVo> calenderSet) {
		this.calenderSet = calenderSet;
	}

	/**
	 * 달력를 추가합니다..
	 * 
	 * @param calender
	 *            달력
	 */
	public void addCalender(CalenderVo calender) {
		this.calenderSet.add(calender);
	}

	/**
	 * 달력 목록을 가져옵니다..
	 * 
	 * @return 달력 목록
	 */
	public Set<CalenderVo> getCalenderSet() {
		return this.calenderSet;
	}

	/**
	 * 코멘트 목록을 설정합니다..
	 * 
	 * @param commentsSet
	 *            코멘트 목록
	 */
	public void setCommentsSet(Set<CommentsVo> commentsSet) {
		this.commentsSet = commentsSet;
	}

	/**
	 * 코멘트를 추가합니다..
	 * 
	 * @param comments
	 *            코멘트
	 */
	public void addComments(CommentsVo comments) {
		this.commentsSet.add(comments);
	}

	/**
	 * 코멘트 목록을 가져옵니다..
	 * 
	 * @return 코멘트 목록
	 */
	public Set<CommentsVo> getCommentsSet() {
		return this.commentsSet;
	}

	/**
	 * 이모티콘그룹 목록을 설정합니다..
	 * 
	 * @param emoticongroupSet
	 *            이모티콘그룹 목록
	 */
	public void setEmoticongroupSet(Set<EmoticongroupVo> emoticongroupSet) {
		this.emoticongroupSet = emoticongroupSet;
	}

	/**
	 * 이모티콘그룹를 추가합니다..
	 * 
	 * @param emoticongroup
	 *            이모티콘그룹
	 */
	public void addEmoticongroup(EmoticongroupVo emoticongroup) {
		this.emoticongroupSet.add(emoticongroup);
	}

	/**
	 * 이모티콘그룹 목록을 가져옵니다..
	 * 
	 * @return 이모티콘그룹 목록
	 */
	public Set<EmoticongroupVo> getEmoticongroupSet() {
		return this.emoticongroupSet;
	}

	/**
	 * 찜목록 목록을 설정합니다..
	 * 
	 * @param favorlistSet
	 *            찜목록 목록
	 */
	public void setFavorlistSet(Set<FavorlistVo> favorlistSet) {
		this.favorlistSet = favorlistSet;
	}

	/**
	 * 찜목록를 추가합니다..
	 * 
	 * @param favorlist
	 *            찜목록
	 */
	public void addFavorlist(FavorlistVo favorlist) {
		this.favorlistSet.add(favorlist);
	}

	/**
	 * 찜목록 목록을 가져옵니다..
	 * 
	 * @return 찜목록 목록
	 */
	public Set<FavorlistVo> getFavorlistSet() {
		return this.favorlistSet;
	}

	/**
	 * 친구목록 목록을 설정합니다..
	 * 
	 * @param friendlistSet
	 *            친구목록 목록
	 */
	public void setFriendlistSet(Set<FriendlistVo> friendlistSet) {
		this.friendlistSet = friendlistSet;
	}

	/**
	 * 친구목록를 추가합니다..
	 * 
	 * @param friendlist
	 *            친구목록
	 */
	public void addFriendlist(FriendlistVo friendlist) {
		this.friendlistSet.add(friendlist);
	}

	/**
	 * 친구목록 목록을 가져옵니다..
	 * 
	 * @return 친구목록 목록
	 */
	public Set<FriendlistVo> getFriendlistSet() {
		return this.friendlistSet;
	}

	/**
	 * 옵션 목록을 설정합니다..
	 * 
	 * @param optionsSet
	 *            옵션 목록
	 */
	public void setOptionsSet(Set<OptionsVo> optionsSet) {
		this.optionsSet = optionsSet;
	}

	/**
	 * 옵션를 추가합니다..
	 * 
	 * @param options
	 *            옵션
	 */
	public void addOptions(OptionsVo options) {
		this.optionsSet.add(options);
	}

	/**
	 * 옵션 목록을 가져옵니다..
	 * 
	 * @return 옵션 목록
	 */
	public Set<OptionsVo> getOptionsSet() {
		return this.optionsSet;
	}

	/**
	 * 선물 목록을 설정합니다..
	 * 
	 * @param presentSet
	 *            선물 목록
	 */
	public void setPresentSet(Set<PresentVo> presentSet) {
		this.presentSet = presentSet;
	}

	/**
	 * 선물를 추가합니다..
	 * 
	 * @param present
	 *            선물
	 */
	public void addPresent(PresentVo present) {
		this.presentSet.add(present);
	}

	/**
	 * 선물 목록을 가져옵니다..
	 * 
	 * @return 선물 목록
	 */
	public Set<PresentVo> getPresentSet() {
		return this.presentSet;
	}

	/**
	 * 프로필 목록을 설정합니다..
	 * 
	 * @param profilesSet
	 *            프로필 목록
	 */
	public void setProfilesSet(Set<ProfilesVo> profilesSet) {
		this.profilesSet = profilesSet;
	}

	/**
	 * 프로필를 추가합니다..
	 * 
	 * @param profiles
	 *            프로필
	 */
	public void addProfiles(ProfilesVo profiles) {
		this.profilesSet.add(profiles);
	}

	/**
	 * 프로필 목록을 가져옵니다..
	 * 
	 * @return 프로필 목록
	 */
	public Set<ProfilesVo> getProfilesSet() {
		return this.profilesSet;
	}

	/**
	 * 문의 목록을 설정합니다..
	 * 
	 * @param qnaSet
	 *            문의 목록
	 */
	public void setQnaSet(Set<QnaVo> qnaSet) {
		this.qnaSet = qnaSet;
	}

	/**
	 * 문의를 추가합니다..
	 * 
	 * @param qna
	 *            문의
	 */
	public void addQna(QnaVo qna) {
		this.qnaSet.add(qna);
	}

	/**
	 * 문의 목록을 가져옵니다..
	 * 
	 * @return 문의 목록
	 */
	public Set<QnaVo> getQnaSet() {
		return this.qnaSet;
	}

	/**
	 * 스토리 목록을 설정합니다..
	 * 
	 * @param storySet
	 *            스토리 목록
	 */
	public void setStorySet(Set<StoryVo> storySet) {
		this.storySet = storySet;
	}

	/**
	 * 스토리를 추가합니다..
	 * 
	 * @param story
	 *            스토리
	 */
	public void addStory(StoryVo story) {
		this.storySet.add(story);
	}

	/**
	 * 스토리 목록을 가져옵니다..
	 * 
	 * @return 스토리 목록
	 */
	public Set<StoryVo> getStorySet() {
		return this.storySet;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((num == null) ? 0 : num.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		AccountVo other = (AccountVo) obj;
		if (num == null) {
			if (other.num != null) {
				return false;
			}
		} else if (!num.equals(other.num)) {
			return false;
		}
		return true;
	}

}
